// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Viribus_Unitis;

#nullable disable

namespace Viribus_Unitis.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("RequestTag", b =>
                {
                    b.Property<int>("RequestsId")
                        .HasColumnType("int");

                    b.Property<int>("TagsId")
                        .HasColumnType("int");

                    b.HasKey("RequestsId", "TagsId");

                    b.HasIndex("TagsId");

                    b.ToTable("RequestTag");
                });

            modelBuilder.Entity("Viribus_Unitis.Models.Description", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("RequestId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("RequestId")
                        .IsUnique();

                    b.ToTable("Descriptions");
                });

            modelBuilder.Entity("Viribus_Unitis.Models.Request", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Requests");
                });

            modelBuilder.Entity("Viribus_Unitis.Models.Response", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Comment")
                        .HasColumnType("longtext");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("RequestId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RequestId");

                    b.ToTable("Responses");
                });

            modelBuilder.Entity("Viribus_Unitis.Models.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Tags");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Документы"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Учеба"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Реквизит"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Досуг"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Мероприятия"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Наука"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Развлечения"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Общежитие"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Разное"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Срочно"
                        });
                });

            modelBuilder.Entity("RequestTag", b =>
                {
                    b.HasOne("Viribus_Unitis.Models.Request", null)
                        .WithMany()
                        .HasForeignKey("RequestsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Viribus_Unitis.Models.Tag", null)
                        .WithMany()
                        .HasForeignKey("TagsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Viribus_Unitis.Models.Description", b =>
                {
                    b.HasOne("Viribus_Unitis.Models.Request", "Request")
                        .WithOne("Description")
                        .HasForeignKey("Viribus_Unitis.Models.Description", "RequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Request");
                });

            modelBuilder.Entity("Viribus_Unitis.Models.Response", b =>
                {
                    b.HasOne("Viribus_Unitis.Models.Request", "Request")
                        .WithMany("Responses")
                        .HasForeignKey("RequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Request");
                });

            modelBuilder.Entity("Viribus_Unitis.Models.Request", b =>
                {
                    b.Navigation("Description")
                        .IsRequired();

                    b.Navigation("Responses");
                });
#pragma warning restore 612, 618
        }
    }
}
